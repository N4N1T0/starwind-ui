---
import type { HTMLAttributes } from "astro/types";
import { tv } from "tailwind-variants";

type Props = HTMLAttributes<"fieldset"> & {
	/**
	 * Optional value for the radio group
	 */
	value?: string;
	/**
	 * Optional default value for the radio group
	 */
	defaultValue?: string;
	/**
	 * Optional name for the radio group
	 * This is required for the radio group to function properly
	 */
	name: string;
	/**
	 * Optional label for the radio group
	 */
	label?: string;
	/**
	 * Whether the radio group is required
	 */
	required?: boolean;
	/**
	 * Whether the radio group is disabled
	 */
	disabled?: boolean;
};

const radioGroup = tv({
	base: "starwind-radio-group grid gap-3",
});

const { 
	class: className,
	value,
	defaultValue,
	name,
	label,
	required = false,
	disabled = false,
	...rest 
} = Astro.props;
---

<fieldset 
	class={radioGroup({ class: className })}
	data-slot="radio-group"
	data-value={value || defaultValue}
	data-required={required ? "" : undefined}
	data-disabled={disabled ? "" : undefined}
	disabled={disabled}
	{...rest}
>
	{label && <legend class="sr-only">{label}</legend>}
	<slot />
</fieldset>

<script>
	// Initialize radio groups on page load
	const initRadioGroups = () => {
		document.querySelectorAll('.starwind-radio-group').forEach((fieldset) => {
			const group = fieldset as HTMLFieldSetElement;
			const initialValue = group.dataset.value;
			
			if (initialValue) {
				// Find the radio input with the matching value and check it
				const inputs = group.querySelectorAll<HTMLInputElement>('input[type="radio"]');
				inputs.forEach(input => {
					if (input.value === initialValue) {
						input.checked = true;
					}
				});
			}

			// Listen for changes to update the fieldset's data-value attribute
			group.addEventListener('change', (e) => {
				const target = e.target as HTMLInputElement;
				if (target.type === 'radio') {
					group.dataset.value = target.value;
					
					// Dispatch custom event for external listeners
					const event = new CustomEvent('starwind:value-change', {
						bubbles: true,
						detail: { value: target.value },
					});
					group.dispatchEvent(event);
				}
			});
		});
	};

	initRadioGroups();

	// Handle Astro view transitions
	document.addEventListener('astro:after-swap', initRadioGroups);
</script>